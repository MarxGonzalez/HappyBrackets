plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}
apply plugin: 'idea'

// Test for right version of Java in use for running this script
assert org.gradle.api.JavaVersion.current().isJava8Compatible()

idea{
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}

repositories {
    //All sub-projects will now refer to the same 'libs' directory
    flatDir {
        dirs "libs"
    }
    mavenCentral()
}

dependencies {
    //Add any libs directory jars, for example beads
    compile   fileTree(dir: "$rootProject.projectDir/libs", include: '*.jar')
    //remote dependencies
    compile     group: 'com.google.code.gson',  name: 'gson',           version: '2.6.2'
    compile     group: 'org.nanohttpd',         name: 'nanohttpd',      version: '2.2.0'
    compile     group: 'com.squareup.okhttp3',  name: 'okhttp',         version: '3.2.0'
    compile     group: 'de.sciss',              name: 'netutil',        version: '1.0.0'
    compile     group: 'com.pi4j',              name: 'pi4j-core',      version: '1.0'
//    compile   group: 'net.beadsproject',      name: 'beads'
//    compile   group: 'junit',                 name: 'junit',      version: '4.+'
    testCompile group: 'junit',                 name: 'junit',      version: '4.+'
}

//don't add tutorial files to source set, they don't need to be in the final jar.
sourceSets {
    main {
        java {
            srcDirs( "src/main/java" )
        }
    }
}

//create a jar of javadocs
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// A helper for checking which jars are loaded
task listJars << {
    configurations.compile.each { File file -> println file.name }
}

task smile << {
        println ':)'
        println docsDir
}

jar {
    manifest {
        attributes 'Main-Class': 'net.happybrackets.device.DeviceMain'
    }
}

shadowJar {
    baseName = 'HB'
    classifier = ''
}

task copyFiles << {
    copy {
        from 'build/libs/HB.jar'
        into '../Distribution/HappyBrackets Developer Kit/HappyBrackets Project/libs'
    }
    copy {
        from 'build/docs/javadoc'
        into '../Distribution/HappyBrackets Developer Kit/HappyBrackets Project/libs/docs/hb/javadoc'
    }
    copy {
        from 'build/libs/HB.jar'
        into '../Distribution/HappyBrackets Developer Kit/Device/HappyBrackets'
    }
}

task bundle << {
    println "bundling complete, see $buildDir/libs"
}

//setup bundle dependencies
bundle.dependsOn shadowJar
bundle.dependsOn javadoc
bundle.dependsOn copyFiles
